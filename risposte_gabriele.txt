
1) Un sistema di versioning permette di registrare i cambiamenti che vengono fatti all'interno di un file o di più file. Viene creata una history delle varie versioni e permette la navigazione all'interno di esse.
Facilita il lavoro di più persone all'interno di un singolo progetto, permette di commentare, salvare ogni modifica eseguita.

2) git init

3) Origin è il nome che viene dato al repository quando cloniamo un progetto tramite il comando git clone.

4) Il git push serve per aggiornare la repository online con la nostra repository in locale, mentre il git pull si usa per aggiornare la repository in locale con quella online

5) Sono entrambi comandi che servono per annullare delle operazioni. Il primo serve per tornare indietro e riporta il repository ad uno stato precedente, non crea nessun commit. Mentre il secondo permette sempre di tornare ad uno stato precedente però crea un commit che ne indica le modifiche.

6) Un branch in git è una ramificazione che parte dal ramo principale (master). Il branch develop è il ramo dove si sviluppa il codice mentre il branch master è il ramo sicuro del codice dove vengono rilasciate le varie release dopo che sono state testate e si sa che sono funzionanti

7) git branch <nome>

8) se si lavora sul branch develop il comando è: git merge branch_sviluppo

9) Quando si modifica il codice e si è apportato un miglioramento ad esso si può proporre la modifica al proprietario della repository tramite la pull request. Il proprietario poi potrà decidere se accettare o no la modifica.

10) fatto

11) I conflitti possono nascere dopo aver fatto un merge o un rebase. Posso essere risolti tramite un editor di testo, o tramite il comando git mergetool, dopo aver risolto i conflitti in un merge bisogna fare un git commit, in un rebase invece git rebase --continue

12) Entrambi servono per unire due o più branch. Il merge nell'unione mantiene tutti i commit del ramo che viene unito, mentre il rebase comprime tutti i commit un in nuovo commit.

13) Il git fetch scarica da una repository online tutti i file e i commit e li salva nella repository locale. Con -all vengono recuperati tutti i riferimenti. Con -p prima di recuperare elimina tutti i riferimenti alla repository che non esistono più.

14) Con lo stash si può salvare in modo temporaneo il lavoro. Ad esempio stiamo lavorando a un codice e non siamo ancora pronti a fare il commit, se dobbiamo per necessità cambiare branch utilizzeremo il comando stash per mettere da parte il lavoro, fare quello che dobbiamo fare e successivamente riprendere il lavoro da dove si era interrotto.
